Terminals which are not used

   NEWLINE
   CONTINUE
   CHAR_LIT
   THEN


Rules never reduced

  134 ArgumentList: STR_LIT


State 17 conflicts: 1 shift/reduce
State 63 conflicts: 1 reduce/reduce
State 82 conflicts: 17 shift/reduce
State 87 conflicts: 17 shift/reduce
State 163 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 @1: /* empty */

    2 Program: @1 GlobalStmtList
    3        | /* empty */

    4 GlobalStmtList: GlobalStmtList GlobalStmt
    5               | GlobalStmt

    6 GlobalStmt: DefineVariableStmt
    7           | FunctionDefStmt

    8 DefineVariableStmt: VARIABLE_T IDENT VAL_ASSIGN Expression ';'

    9 @2: /* empty */

   10 @3: /* empty */

   11 FunctionDefStmt: VARIABLE_T IDENT @2 '(' FunctionParameterStmtList ')' @3 '{' StmtList '}'

   12 FunctionParameterStmtList: FunctionParameterStmtList ',' VARIABLE_T IDENT
   13                          | VARIABLE_T IDENT '[' ']'
   14                          | VARIABLE_T IDENT

   15 @4: /* empty */

   16 FunctionParameterStmtList: VARIABLE_T IDENT '[' INT_LIT @4 ']'

   17 StmtList: Stmt StmtList
   18         | Stmt

   19 @5: /* empty */

   20 Stmt: COUT @5 CoutParmListStmt ';'

   21 @6: /* empty */

   22 Stmt: RETURN @6 Expression ';'
   23     | RETURN ';'
   24     | ';'
   25     | DeclarationStmt
   26     | IfStmt
   27     | AssignmentStmt
   28     | WhileStmt
   29     | ForStmt
   30     | BREAK ';'
   31     | FuncCallStmt

   32 @7: /* empty */

   33 CoutParmListStmt: SHL Expression @7 CoutParmListStmt
   34                 | SHL Expression

   35 Expression: UnaryExpr

   36 @8: /* empty */

   37 Expression: Expression binary_op @8 Expression

   38 @9: /* empty */

   39 Expression: '(' VARIABLE_T @9 ')' Expression

   40 UnaryExpr: PrimaryExpr
   41          | unary_op UnaryExpr

   42 PrimaryExpr: Operand
   43            | FuncCallStmt

   44 Operand: Literal
   45        | IDENT

   46 @10: /* empty */

   47 Operand: '(' @10 Expression ')'
   48        | IDENT D1Array
   49        | IDENT D2Array

   50 Literal: INT_LIT
   51        | FLOAT_LIT
   52        | BOOL_LIT
   53        | STR_LIT

   54 binary_op: LOR
   55          | LAN
   56          | cmp_op
   57          | add_op
   58          | mul_op

   59 cmp_op: EQL
   60       | NEQ
   61       | LES
   62       | LEQ
   63       | GTR
   64       | GEQ

   65 add_op: ADD
   66       | SUB
   67       | BAN
   68       | BOR
   69       | BXO

   70 mul_op: MUL
   71       | DIV
   72       | REM
   73       | SHR

   74 unary_op: ADD
   75         | SUB
   76         | NOT
   77         | BNT

   78 @11: /* empty */

   79 DeclarationStmt: VARIABLE_T @11 DeclarationList ';'

   80 @12: /* empty */

   81 DeclarationStmt: AUTO @12 DeclarationList ';'

   82 DeclarationList: DeclarationIDENT ',' DeclarationList
   83                | DeclarationIDENT

   84 DeclarationIDENT: IDENT
   85                 | IDENT VAL_ASSIGN Expression
   86                 | IDENT D2Array

   87 @13: /* empty */

   88 DeclarationIDENT: IDENT D1Array @13 VAL_ASSIGN '{' ListOfArray '}'

   89 D2Array: D1Array D1Array

   90 D1Array: '[' Index ']'

   91 ListOfArray: Expression
   92            | Expression ',' ListOfArray
   93            | /* empty */

   94 AssignmentStmt: Operand assign_op Expression
   95               | Operand INC_ASSIGN
   96               | Operand DEC_ASSIGN

   97 assign_op: VAL_ASSIGN
   98          | ADD_ASSIGN
   99          | SUB_ASSIGN
  100          | MUL_ASSIGN
  101          | DIV_ASSIGN
  102          | REM_ASSIGN
  103          | BOR_ASSIGN
  104          | BAN_ASSIGN
  105          | BXO_ASSIGN
  106          | SHR_ASSIGN
  107          | SHL_ASSIGN

  108 IfStmt: IfCondition Block
  109       | IfCondition Stmt

  110 @14: /* empty */

  111 IfStmt: IfCondition Block ELSE @14 Block

  112 @15: /* empty */

  113 IfStmt: IfCondition Block ELSE @15 IfStmt

  114 @16: /* empty */

  115 IfCondition: @16 IF '(' Condition ')'

  116 Condition: Expression

  117 @17: /* empty */

  118 Block: '{' @17 StmtList '}'

  119 @18: /* empty */

  120 @19: /* empty */

  121 WhileStmt: WHILE @18 Condition @19 Block

  122 @20: /* empty */

  123 ForStmt: FOR @20 ForIn '{' StmtList '}'

  124 @21: /* empty */

  125 ForIn: '(' AUTO IDENT ':' IDENT @21 ')'

  126 @22: /* empty */

  127 @23: /* empty */

  128 @24: /* empty */

  129 ForIn: '(' ForDeclare @22 Condition @23 ';' AssignmentStmt @24 ')'

  130 ForDeclare: DeclarationStmt
  131           | ';'

  132 FuncCallStmt: IDENT '(' ')'
  133             | IDENT '(' ArgumentList ')'

  134 ArgumentList: STR_LIT
  135             | Expression
  136             | Expression ',' ArgumentList

  137 Index: INT_LIT
  138      | IDENT


Terminals, with rules where they appear

$end (0) 0
'(' (40) 11 39 47 115 125 129 132 133
')' (41) 11 39 47 115 125 129 132 133
',' (44) 12 82 92 136
':' (58) 125
';' (59) 8 20 22 23 24 30 79 81 129 131
'[' (91) 13 16 90
']' (93) 13 16 90
'{' (123) 11 88 118 123
'}' (125) 11 88 118 123
error (256)
COUT (258) 20
NEWLINE (259)
AUTO (260) 81 125
SHR (261) 73
SHL (262) 33 34
BAN (263) 67
BOR (264) 68
BNT (265) 77
BXO (266) 69
ADD (267) 65 74
SUB (268) 66 75
MUL (269) 70
DIV (270) 71
REM (271) 72
NOT (272) 76
GTR (273) 63
LES (274) 61
GEQ (275) 64
LEQ (276) 62
EQL (277) 59
NEQ (278) 60
LAN (279) 55
LOR (280) 54
VAL_ASSIGN (281) 8 85 88 97
ADD_ASSIGN (282) 98
SUB_ASSIGN (283) 99
MUL_ASSIGN (284) 100
DIV_ASSIGN (285) 101
REM_ASSIGN (286) 102
BAN_ASSIGN (287) 104
BOR_ASSIGN (288) 103
BXO_ASSIGN (289) 105
SHR_ASSIGN (290) 106
SHL_ASSIGN (291) 107
INC_ASSIGN (292) 95
DEC_ASSIGN (293) 96
IF (294) 115
ELSE (295) 111 113
FOR (296) 123
WHILE (297) 121
RETURN (298) 22 23
BREAK (299) 30
CONTINUE (300)
VARIABLE_T (301) 8 11 12 13 14 16 39 79
IDENT (302) 8 11 12 13 14 16 45 48 49 84 85 86 88 125 132 133 138
INT_LIT (303) 16 50 137
STR_LIT (304) 53 134
CHAR_LIT (305)
BOOL_LIT (306) 52
FLOAT_LIT (307) 51
THEN (308)


Nonterminals, with rules where they appear

$accept (63)
    on left: 0
Program (64)
    on left: 2 3, on right: 0
@1 (65)
    on left: 1, on right: 2
GlobalStmtList (66)
    on left: 4 5, on right: 2 4
GlobalStmt (67)
    on left: 6 7, on right: 4 5
DefineVariableStmt (68)
    on left: 8, on right: 6
FunctionDefStmt (69)
    on left: 11, on right: 7
@2 (70)
    on left: 9, on right: 11
@3 (71)
    on left: 10, on right: 11
FunctionParameterStmtList (72)
    on left: 12 13 14 16, on right: 11 12
@4 (73)
    on left: 15, on right: 16
StmtList (74)
    on left: 17 18, on right: 11 17 118 123
Stmt (75)
    on left: 20 22 23 24 25 26 27 28 29 30 31, on right: 17 18 109
@5 (76)
    on left: 19, on right: 20
@6 (77)
    on left: 21, on right: 22
CoutParmListStmt (78)
    on left: 33 34, on right: 20 33
@7 (79)
    on left: 32, on right: 33
Expression (80)
    on left: 35 37 39, on right: 8 22 33 34 37 39 47 85 91 92 94 116
    135 136
@8 (81)
    on left: 36, on right: 37
@9 (82)
    on left: 38, on right: 39
UnaryExpr (83)
    on left: 40 41, on right: 35 41
PrimaryExpr (84)
    on left: 42 43, on right: 40
Operand (85)
    on left: 44 45 47 48 49, on right: 42 94 95 96
@10 (86)
    on left: 46, on right: 47
Literal (87)
    on left: 50 51 52 53, on right: 44
binary_op (88)
    on left: 54 55 56 57 58, on right: 37
cmp_op (89)
    on left: 59 60 61 62 63 64, on right: 56
add_op (90)
    on left: 65 66 67 68 69, on right: 57
mul_op (91)
    on left: 70 71 72 73, on right: 58
unary_op (92)
    on left: 74 75 76 77, on right: 41
DeclarationStmt (93)
    on left: 79 81, on right: 25 130
@11 (94)
    on left: 78, on right: 79
@12 (95)
    on left: 80, on right: 81
DeclarationList (96)
    on left: 82 83, on right: 79 81 82
DeclarationIDENT (97)
    on left: 84 85 86 88, on right: 82 83
@13 (98)
    on left: 87, on right: 88
D2Array (99)
    on left: 89, on right: 49 86
D1Array (100)
    on left: 90, on right: 48 88 89
ListOfArray (101)
    on left: 91 92 93, on right: 88 92
AssignmentStmt (102)
    on left: 94 95 96, on right: 27 129
assign_op (103)
    on left: 97 98 99 100 101 102 103 104 105 106 107,
    on right: 94
IfStmt (104)
    on left: 108 109 111 113, on right: 26 113
@14 (105)
    on left: 110, on right: 111
@15 (106)
    on left: 112, on right: 113
IfCondition (107)
    on left: 115, on right: 108 109 111 113
@16 (108)
    on left: 114, on right: 115
Condition (109)
    on left: 116, on right: 115 121 129
Block (110)
    on left: 118, on right: 108 111 113 121
@17 (111)
    on left: 117, on right: 118
WhileStmt (112)
    on left: 121, on right: 28
@18 (113)
    on left: 119, on right: 121
@19 (114)
    on left: 120, on right: 121
ForStmt (115)
    on left: 123, on right: 29
@20 (116)
    on left: 122, on right: 123
ForIn (117)
    on left: 125 129, on right: 123
@21 (118)
    on left: 124, on right: 125
@22 (119)
    on left: 126, on right: 129
@23 (120)
    on left: 127, on right: 129
@24 (121)
    on left: 128, on right: 129
ForDeclare (122)
    on left: 130 131, on right: 129
FuncCallStmt (123)
    on left: 132 133, on right: 31 43
ArgumentList (124)
    on left: 134 135 136, on right: 133 136
Index (125)
    on left: 137 138, on right: 90


state 0

    0 $accept: . Program $end

    $end      reduce using rule 3 (Program)
    $default  reduce using rule 1 (@1)

    Program  go to state 1
    @1       go to state 2


state 1

    0 $accept: Program . $end

    $end  shift, and go to state 3


state 2

    2 Program: @1 . GlobalStmtList

    VARIABLE_T  shift, and go to state 4

    GlobalStmtList      go to state 5
    GlobalStmt          go to state 6
    DefineVariableStmt  go to state 7
    FunctionDefStmt     go to state 8


state 3

    0 $accept: Program $end .

    $default  accept


state 4

    8 DefineVariableStmt: VARIABLE_T . IDENT VAL_ASSIGN Expression ';'
   11 FunctionDefStmt: VARIABLE_T . IDENT @2 '(' FunctionParameterStmtList ')' @3 '{' StmtList '}'

    IDENT  shift, and go to state 9


state 5

    2 Program: @1 GlobalStmtList .
    4 GlobalStmtList: GlobalStmtList . GlobalStmt

    VARIABLE_T  shift, and go to state 4

    $default  reduce using rule 2 (Program)

    GlobalStmt          go to state 10
    DefineVariableStmt  go to state 7
    FunctionDefStmt     go to state 8


state 6

    5 GlobalStmtList: GlobalStmt .

    $default  reduce using rule 5 (GlobalStmtList)


state 7

    6 GlobalStmt: DefineVariableStmt .

    $default  reduce using rule 6 (GlobalStmt)


state 8

    7 GlobalStmt: FunctionDefStmt .

    $default  reduce using rule 7 (GlobalStmt)


state 9

    8 DefineVariableStmt: VARIABLE_T IDENT . VAL_ASSIGN Expression ';'
   11 FunctionDefStmt: VARIABLE_T IDENT . @2 '(' FunctionParameterStmtList ')' @3 '{' StmtList '}'

    VAL_ASSIGN  shift, and go to state 11

    $default  reduce using rule 9 (@2)

    @2  go to state 12


state 10

    4 GlobalStmtList: GlobalStmtList GlobalStmt .

    $default  reduce using rule 4 (GlobalStmtList)


state 11

    8 DefineVariableStmt: VARIABLE_T IDENT VAL_ASSIGN . Expression ';'

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 23
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 12

   11 FunctionDefStmt: VARIABLE_T IDENT @2 . '(' FunctionParameterStmtList ')' @3 '{' StmtList '}'

    '('  shift, and go to state 30


state 13

   77 unary_op: BNT .

    $default  reduce using rule 77 (unary_op)


state 14

   74 unary_op: ADD .

    $default  reduce using rule 74 (unary_op)


state 15

   75 unary_op: SUB .

    $default  reduce using rule 75 (unary_op)


state 16

   76 unary_op: NOT .

    $default  reduce using rule 76 (unary_op)


state 17

   45 Operand: IDENT .
   48        | IDENT . D1Array
   49        | IDENT . D2Array
  132 FuncCallStmt: IDENT . '(' ')'
  133             | IDENT . '(' ArgumentList ')'

    '('  shift, and go to state 31
    '['  shift, and go to state 32

    '('       [reduce using rule 45 (Operand)]
    $default  reduce using rule 45 (Operand)

    D2Array  go to state 33
    D1Array  go to state 34


state 18

   50 Literal: INT_LIT .

    $default  reduce using rule 50 (Literal)


state 19

   53 Literal: STR_LIT .

    $default  reduce using rule 53 (Literal)


state 20

   52 Literal: BOOL_LIT .

    $default  reduce using rule 52 (Literal)


state 21

   51 Literal: FLOAT_LIT .

    $default  reduce using rule 51 (Literal)


state 22

   39 Expression: '(' . VARIABLE_T @9 ')' Expression
   47 Operand: '(' . @10 Expression ')'

    VARIABLE_T  shift, and go to state 35

    $default  reduce using rule 46 (@10)

    @10  go to state 36


state 23

    8 DefineVariableStmt: VARIABLE_T IDENT VAL_ASSIGN Expression . ';'
   37 Expression: Expression . binary_op @8 Expression

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53
    ';'  shift, and go to state 54

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 24

   35 Expression: UnaryExpr .

    $default  reduce using rule 35 (Expression)


state 25

   40 UnaryExpr: PrimaryExpr .

    $default  reduce using rule 40 (UnaryExpr)


state 26

   42 PrimaryExpr: Operand .

    $default  reduce using rule 42 (PrimaryExpr)


state 27

   44 Operand: Literal .

    $default  reduce using rule 44 (Operand)


state 28

   41 UnaryExpr: unary_op . UnaryExpr

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 59

    UnaryExpr     go to state 60
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 29

   43 PrimaryExpr: FuncCallStmt .

    $default  reduce using rule 43 (PrimaryExpr)


state 30

   11 FunctionDefStmt: VARIABLE_T IDENT @2 '(' . FunctionParameterStmtList ')' @3 '{' StmtList '}'

    VARIABLE_T  shift, and go to state 61

    FunctionParameterStmtList  go to state 62


state 31

  132 FuncCallStmt: IDENT '(' . ')'
  133             | IDENT '(' . ArgumentList ')'

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 63
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22
    ')'        shift, and go to state 64

    Expression    go to state 65
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29
    ArgumentList  go to state 66


state 32

   90 D1Array: '[' . Index ']'

    IDENT    shift, and go to state 67
    INT_LIT  shift, and go to state 68

    Index  go to state 69


state 33

   49 Operand: IDENT D2Array .

    $default  reduce using rule 49 (Operand)


state 34

   48 Operand: IDENT D1Array .
   89 D2Array: D1Array . D1Array

    '['  shift, and go to state 32

    $default  reduce using rule 48 (Operand)

    D1Array  go to state 70


state 35

   39 Expression: '(' VARIABLE_T . @9 ')' Expression

    $default  reduce using rule 38 (@9)

    @9  go to state 71


state 36

   47 Operand: '(' @10 . Expression ')'

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 72
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 37

   73 mul_op: SHR .

    $default  reduce using rule 73 (mul_op)


state 38

   67 add_op: BAN .

    $default  reduce using rule 67 (add_op)


state 39

   68 add_op: BOR .

    $default  reduce using rule 68 (add_op)


state 40

   69 add_op: BXO .

    $default  reduce using rule 69 (add_op)


state 41

   65 add_op: ADD .

    $default  reduce using rule 65 (add_op)


state 42

   66 add_op: SUB .

    $default  reduce using rule 66 (add_op)


state 43

   70 mul_op: MUL .

    $default  reduce using rule 70 (mul_op)


state 44

   71 mul_op: DIV .

    $default  reduce using rule 71 (mul_op)


state 45

   72 mul_op: REM .

    $default  reduce using rule 72 (mul_op)


state 46

   63 cmp_op: GTR .

    $default  reduce using rule 63 (cmp_op)


state 47

   61 cmp_op: LES .

    $default  reduce using rule 61 (cmp_op)


state 48

   64 cmp_op: GEQ .

    $default  reduce using rule 64 (cmp_op)


state 49

   62 cmp_op: LEQ .

    $default  reduce using rule 62 (cmp_op)


state 50

   59 cmp_op: EQL .

    $default  reduce using rule 59 (cmp_op)


state 51

   60 cmp_op: NEQ .

    $default  reduce using rule 60 (cmp_op)


state 52

   55 binary_op: LAN .

    $default  reduce using rule 55 (binary_op)


state 53

   54 binary_op: LOR .

    $default  reduce using rule 54 (binary_op)


state 54

    8 DefineVariableStmt: VARIABLE_T IDENT VAL_ASSIGN Expression ';' .

    $default  reduce using rule 8 (DefineVariableStmt)


state 55

   37 Expression: Expression binary_op . @8 Expression

    $default  reduce using rule 36 (@8)

    @8  go to state 73


state 56

   56 binary_op: cmp_op .

    $default  reduce using rule 56 (binary_op)


state 57

   57 binary_op: add_op .

    $default  reduce using rule 57 (binary_op)


state 58

   58 binary_op: mul_op .

    $default  reduce using rule 58 (binary_op)


state 59

   47 Operand: '(' . @10 Expression ')'

    $default  reduce using rule 46 (@10)

    @10  go to state 36


state 60

   41 UnaryExpr: unary_op UnaryExpr .

    $default  reduce using rule 41 (UnaryExpr)


state 61

   13 FunctionParameterStmtList: VARIABLE_T . IDENT '[' ']'
   14                          | VARIABLE_T . IDENT
   16                          | VARIABLE_T . IDENT '[' INT_LIT @4 ']'

    IDENT  shift, and go to state 74


state 62

   11 FunctionDefStmt: VARIABLE_T IDENT @2 '(' FunctionParameterStmtList . ')' @3 '{' StmtList '}'
   12 FunctionParameterStmtList: FunctionParameterStmtList . ',' VARIABLE_T IDENT

    ')'  shift, and go to state 75
    ','  shift, and go to state 76


state 63

   53 Literal: STR_LIT .
  134 ArgumentList: STR_LIT .

    ')'       reduce using rule 53 (Literal)
    ')'       [reduce using rule 134 (ArgumentList)]
    $default  reduce using rule 53 (Literal)


state 64

  132 FuncCallStmt: IDENT '(' ')' .

    $default  reduce using rule 132 (FuncCallStmt)


state 65

   37 Expression: Expression . binary_op @8 Expression
  135 ArgumentList: Expression .
  136             | Expression . ',' ArgumentList

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53
    ','  shift, and go to state 77

    $default  reduce using rule 135 (ArgumentList)

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 66

  133 FuncCallStmt: IDENT '(' ArgumentList . ')'

    ')'  shift, and go to state 78


state 67

  138 Index: IDENT .

    $default  reduce using rule 138 (Index)


state 68

  137 Index: INT_LIT .

    $default  reduce using rule 137 (Index)


state 69

   90 D1Array: '[' Index . ']'

    ']'  shift, and go to state 79


state 70

   89 D2Array: D1Array D1Array .

    $default  reduce using rule 89 (D2Array)


state 71

   39 Expression: '(' VARIABLE_T @9 . ')' Expression

    ')'  shift, and go to state 80


state 72

   37 Expression: Expression . binary_op @8 Expression
   47 Operand: '(' @10 Expression . ')'

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53
    ')'  shift, and go to state 81

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 73

   37 Expression: Expression binary_op @8 . Expression

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 82
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 74

   13 FunctionParameterStmtList: VARIABLE_T IDENT . '[' ']'
   14                          | VARIABLE_T IDENT .
   16                          | VARIABLE_T IDENT . '[' INT_LIT @4 ']'

    '['  shift, and go to state 83

    $default  reduce using rule 14 (FunctionParameterStmtList)


state 75

   11 FunctionDefStmt: VARIABLE_T IDENT @2 '(' FunctionParameterStmtList ')' . @3 '{' StmtList '}'

    $default  reduce using rule 10 (@3)

    @3  go to state 84


state 76

   12 FunctionParameterStmtList: FunctionParameterStmtList ',' . VARIABLE_T IDENT

    VARIABLE_T  shift, and go to state 85


state 77

  136 ArgumentList: Expression ',' . ArgumentList

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 63
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 65
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29
    ArgumentList  go to state 86


state 78

  133 FuncCallStmt: IDENT '(' ArgumentList ')' .

    $default  reduce using rule 133 (FuncCallStmt)


state 79

   90 D1Array: '[' Index ']' .

    $default  reduce using rule 90 (D1Array)


state 80

   39 Expression: '(' VARIABLE_T @9 ')' . Expression

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 87
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 81

   47 Operand: '(' @10 Expression ')' .

    $default  reduce using rule 47 (Operand)


state 82

   37 Expression: Expression . binary_op @8 Expression
   37           | Expression binary_op @8 Expression .

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53

    SHR       [reduce using rule 37 (Expression)]
    BAN       [reduce using rule 37 (Expression)]
    BOR       [reduce using rule 37 (Expression)]
    BXO       [reduce using rule 37 (Expression)]
    ADD       [reduce using rule 37 (Expression)]
    SUB       [reduce using rule 37 (Expression)]
    MUL       [reduce using rule 37 (Expression)]
    DIV       [reduce using rule 37 (Expression)]
    REM       [reduce using rule 37 (Expression)]
    GTR       [reduce using rule 37 (Expression)]
    LES       [reduce using rule 37 (Expression)]
    GEQ       [reduce using rule 37 (Expression)]
    LEQ       [reduce using rule 37 (Expression)]
    EQL       [reduce using rule 37 (Expression)]
    NEQ       [reduce using rule 37 (Expression)]
    LAN       [reduce using rule 37 (Expression)]
    LOR       [reduce using rule 37 (Expression)]
    $default  reduce using rule 37 (Expression)

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 83

   13 FunctionParameterStmtList: VARIABLE_T IDENT '[' . ']'
   16                          | VARIABLE_T IDENT '[' . INT_LIT @4 ']'

    INT_LIT  shift, and go to state 88
    ']'      shift, and go to state 89


state 84

   11 FunctionDefStmt: VARIABLE_T IDENT @2 '(' FunctionParameterStmtList ')' @3 . '{' StmtList '}'

    '{'  shift, and go to state 90


state 85

   12 FunctionParameterStmtList: FunctionParameterStmtList ',' VARIABLE_T . IDENT

    IDENT  shift, and go to state 91


state 86

  136 ArgumentList: Expression ',' ArgumentList .

    $default  reduce using rule 136 (ArgumentList)


state 87

   37 Expression: Expression . binary_op @8 Expression
   39           | '(' VARIABLE_T @9 ')' Expression .

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53

    SHR       [reduce using rule 39 (Expression)]
    BAN       [reduce using rule 39 (Expression)]
    BOR       [reduce using rule 39 (Expression)]
    BXO       [reduce using rule 39 (Expression)]
    ADD       [reduce using rule 39 (Expression)]
    SUB       [reduce using rule 39 (Expression)]
    MUL       [reduce using rule 39 (Expression)]
    DIV       [reduce using rule 39 (Expression)]
    REM       [reduce using rule 39 (Expression)]
    GTR       [reduce using rule 39 (Expression)]
    LES       [reduce using rule 39 (Expression)]
    GEQ       [reduce using rule 39 (Expression)]
    LEQ       [reduce using rule 39 (Expression)]
    EQL       [reduce using rule 39 (Expression)]
    NEQ       [reduce using rule 39 (Expression)]
    LAN       [reduce using rule 39 (Expression)]
    LOR       [reduce using rule 39 (Expression)]
    $default  reduce using rule 39 (Expression)

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 88

   16 FunctionParameterStmtList: VARIABLE_T IDENT '[' INT_LIT . @4 ']'

    $default  reduce using rule 15 (@4)

    @4  go to state 92


state 89

   13 FunctionParameterStmtList: VARIABLE_T IDENT '[' ']' .

    $default  reduce using rule 13 (FunctionParameterStmtList)


state 90

   11 FunctionDefStmt: VARIABLE_T IDENT @2 '(' FunctionParameterStmtList ')' @3 '{' . StmtList '}'

    COUT        shift, and go to state 93
    AUTO        shift, and go to state 94
    FOR         shift, and go to state 95
    WHILE       shift, and go to state 96
    RETURN      shift, and go to state 97
    BREAK       shift, and go to state 98
    VARIABLE_T  shift, and go to state 99
    IDENT       shift, and go to state 17
    INT_LIT     shift, and go to state 18
    STR_LIT     shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    ';'         shift, and go to state 100
    '('         shift, and go to state 59

    $default  reduce using rule 114 (@16)

    StmtList         go to state 101
    Stmt             go to state 102
    Operand          go to state 103
    Literal          go to state 27
    DeclarationStmt  go to state 104
    AssignmentStmt   go to state 105
    IfStmt           go to state 106
    IfCondition      go to state 107
    @16              go to state 108
    WhileStmt        go to state 109
    ForStmt          go to state 110
    FuncCallStmt     go to state 111


state 91

   12 FunctionParameterStmtList: FunctionParameterStmtList ',' VARIABLE_T IDENT .

    $default  reduce using rule 12 (FunctionParameterStmtList)


state 92

   16 FunctionParameterStmtList: VARIABLE_T IDENT '[' INT_LIT @4 . ']'

    ']'  shift, and go to state 112


state 93

   20 Stmt: COUT . @5 CoutParmListStmt ';'

    $default  reduce using rule 19 (@5)

    @5  go to state 113


state 94

   81 DeclarationStmt: AUTO . @12 DeclarationList ';'

    $default  reduce using rule 80 (@12)

    @12  go to state 114


state 95

  123 ForStmt: FOR . @20 ForIn '{' StmtList '}'

    $default  reduce using rule 122 (@20)

    @20  go to state 115


state 96

  121 WhileStmt: WHILE . @18 Condition @19 Block

    $default  reduce using rule 119 (@18)

    @18  go to state 116


state 97

   22 Stmt: RETURN . @6 Expression ';'
   23     | RETURN . ';'

    ';'  shift, and go to state 117

    $default  reduce using rule 21 (@6)

    @6  go to state 118


state 98

   30 Stmt: BREAK . ';'

    ';'  shift, and go to state 119


state 99

   79 DeclarationStmt: VARIABLE_T . @11 DeclarationList ';'

    $default  reduce using rule 78 (@11)

    @11  go to state 120


state 100

   24 Stmt: ';' .

    $default  reduce using rule 24 (Stmt)


state 101

   11 FunctionDefStmt: VARIABLE_T IDENT @2 '(' FunctionParameterStmtList ')' @3 '{' StmtList . '}'

    '}'  shift, and go to state 121


state 102

   17 StmtList: Stmt . StmtList
   18         | Stmt .

    COUT        shift, and go to state 93
    AUTO        shift, and go to state 94
    FOR         shift, and go to state 95
    WHILE       shift, and go to state 96
    RETURN      shift, and go to state 97
    BREAK       shift, and go to state 98
    VARIABLE_T  shift, and go to state 99
    IDENT       shift, and go to state 17
    INT_LIT     shift, and go to state 18
    STR_LIT     shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    ';'         shift, and go to state 100
    '('         shift, and go to state 59

    IF        reduce using rule 114 (@16)
    $default  reduce using rule 18 (StmtList)

    StmtList         go to state 122
    Stmt             go to state 102
    Operand          go to state 103
    Literal          go to state 27
    DeclarationStmt  go to state 104
    AssignmentStmt   go to state 105
    IfStmt           go to state 106
    IfCondition      go to state 107
    @16              go to state 108
    WhileStmt        go to state 109
    ForStmt          go to state 110
    FuncCallStmt     go to state 111


state 103

   94 AssignmentStmt: Operand . assign_op Expression
   95               | Operand . INC_ASSIGN
   96               | Operand . DEC_ASSIGN

    VAL_ASSIGN  shift, and go to state 123
    ADD_ASSIGN  shift, and go to state 124
    SUB_ASSIGN  shift, and go to state 125
    MUL_ASSIGN  shift, and go to state 126
    DIV_ASSIGN  shift, and go to state 127
    REM_ASSIGN  shift, and go to state 128
    BAN_ASSIGN  shift, and go to state 129
    BOR_ASSIGN  shift, and go to state 130
    BXO_ASSIGN  shift, and go to state 131
    SHR_ASSIGN  shift, and go to state 132
    SHL_ASSIGN  shift, and go to state 133
    INC_ASSIGN  shift, and go to state 134
    DEC_ASSIGN  shift, and go to state 135

    assign_op  go to state 136


state 104

   25 Stmt: DeclarationStmt .

    $default  reduce using rule 25 (Stmt)


state 105

   27 Stmt: AssignmentStmt .

    $default  reduce using rule 27 (Stmt)


state 106

   26 Stmt: IfStmt .

    $default  reduce using rule 26 (Stmt)


state 107

  108 IfStmt: IfCondition . Block
  109       | IfCondition . Stmt
  111       | IfCondition . Block ELSE @14 Block
  113       | IfCondition . Block ELSE @15 IfStmt

    COUT        shift, and go to state 93
    AUTO        shift, and go to state 94
    FOR         shift, and go to state 95
    WHILE       shift, and go to state 96
    RETURN      shift, and go to state 97
    BREAK       shift, and go to state 98
    VARIABLE_T  shift, and go to state 99
    IDENT       shift, and go to state 17
    INT_LIT     shift, and go to state 18
    STR_LIT     shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    ';'         shift, and go to state 100
    '('         shift, and go to state 59
    '{'         shift, and go to state 137

    $default  reduce using rule 114 (@16)

    Stmt             go to state 138
    Operand          go to state 103
    Literal          go to state 27
    DeclarationStmt  go to state 104
    AssignmentStmt   go to state 105
    IfStmt           go to state 106
    IfCondition      go to state 107
    @16              go to state 108
    Block            go to state 139
    WhileStmt        go to state 109
    ForStmt          go to state 110
    FuncCallStmt     go to state 111


state 108

  115 IfCondition: @16 . IF '(' Condition ')'

    IF  shift, and go to state 140


state 109

   28 Stmt: WhileStmt .

    $default  reduce using rule 28 (Stmt)


state 110

   29 Stmt: ForStmt .

    $default  reduce using rule 29 (Stmt)


state 111

   31 Stmt: FuncCallStmt .

    $default  reduce using rule 31 (Stmt)


state 112

   16 FunctionParameterStmtList: VARIABLE_T IDENT '[' INT_LIT @4 ']' .

    $default  reduce using rule 16 (FunctionParameterStmtList)


state 113

   20 Stmt: COUT @5 . CoutParmListStmt ';'

    SHL  shift, and go to state 141

    CoutParmListStmt  go to state 142


state 114

   81 DeclarationStmt: AUTO @12 . DeclarationList ';'

    IDENT  shift, and go to state 143

    DeclarationList   go to state 144
    DeclarationIDENT  go to state 145


state 115

  123 ForStmt: FOR @20 . ForIn '{' StmtList '}'

    '('  shift, and go to state 146

    ForIn  go to state 147


state 116

  121 WhileStmt: WHILE @18 . Condition @19 Block

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 148
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    Condition     go to state 149
    FuncCallStmt  go to state 29


state 117

   23 Stmt: RETURN ';' .

    $default  reduce using rule 23 (Stmt)


state 118

   22 Stmt: RETURN @6 . Expression ';'

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 150
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 119

   30 Stmt: BREAK ';' .

    $default  reduce using rule 30 (Stmt)


state 120

   79 DeclarationStmt: VARIABLE_T @11 . DeclarationList ';'

    IDENT  shift, and go to state 143

    DeclarationList   go to state 151
    DeclarationIDENT  go to state 145


state 121

   11 FunctionDefStmt: VARIABLE_T IDENT @2 '(' FunctionParameterStmtList ')' @3 '{' StmtList '}' .

    $default  reduce using rule 11 (FunctionDefStmt)


state 122

   17 StmtList: Stmt StmtList .

    $default  reduce using rule 17 (StmtList)


state 123

   97 assign_op: VAL_ASSIGN .

    $default  reduce using rule 97 (assign_op)


state 124

   98 assign_op: ADD_ASSIGN .

    $default  reduce using rule 98 (assign_op)


state 125

   99 assign_op: SUB_ASSIGN .

    $default  reduce using rule 99 (assign_op)


state 126

  100 assign_op: MUL_ASSIGN .

    $default  reduce using rule 100 (assign_op)


state 127

  101 assign_op: DIV_ASSIGN .

    $default  reduce using rule 101 (assign_op)


state 128

  102 assign_op: REM_ASSIGN .

    $default  reduce using rule 102 (assign_op)


state 129

  104 assign_op: BAN_ASSIGN .

    $default  reduce using rule 104 (assign_op)


state 130

  103 assign_op: BOR_ASSIGN .

    $default  reduce using rule 103 (assign_op)


state 131

  105 assign_op: BXO_ASSIGN .

    $default  reduce using rule 105 (assign_op)


state 132

  106 assign_op: SHR_ASSIGN .

    $default  reduce using rule 106 (assign_op)


state 133

  107 assign_op: SHL_ASSIGN .

    $default  reduce using rule 107 (assign_op)


state 134

   95 AssignmentStmt: Operand INC_ASSIGN .

    $default  reduce using rule 95 (AssignmentStmt)


state 135

   96 AssignmentStmt: Operand DEC_ASSIGN .

    $default  reduce using rule 96 (AssignmentStmt)


state 136

   94 AssignmentStmt: Operand assign_op . Expression

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 152
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 137

  118 Block: '{' . @17 StmtList '}'

    $default  reduce using rule 117 (@17)

    @17  go to state 153


state 138

  109 IfStmt: IfCondition Stmt .

    $default  reduce using rule 109 (IfStmt)


state 139

  108 IfStmt: IfCondition Block .
  111       | IfCondition Block . ELSE @14 Block
  113       | IfCondition Block . ELSE @15 IfStmt

    ELSE  shift, and go to state 154

    $default  reduce using rule 108 (IfStmt)


state 140

  115 IfCondition: @16 IF . '(' Condition ')'

    '('  shift, and go to state 155


state 141

   33 CoutParmListStmt: SHL . Expression @7 CoutParmListStmt
   34                 | SHL . Expression

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 156
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 142

   20 Stmt: COUT @5 CoutParmListStmt . ';'

    ';'  shift, and go to state 157


state 143

   84 DeclarationIDENT: IDENT .
   85                 | IDENT . VAL_ASSIGN Expression
   86                 | IDENT . D2Array
   88                 | IDENT . D1Array @13 VAL_ASSIGN '{' ListOfArray '}'

    VAL_ASSIGN  shift, and go to state 158
    '['         shift, and go to state 32

    $default  reduce using rule 84 (DeclarationIDENT)

    D2Array  go to state 159
    D1Array  go to state 160


state 144

   81 DeclarationStmt: AUTO @12 DeclarationList . ';'

    ';'  shift, and go to state 161


state 145

   82 DeclarationList: DeclarationIDENT . ',' DeclarationList
   83                | DeclarationIDENT .

    ','  shift, and go to state 162

    $default  reduce using rule 83 (DeclarationList)


state 146

  125 ForIn: '(' . AUTO IDENT ':' IDENT @21 ')'
  129      | '(' . ForDeclare @22 Condition @23 ';' AssignmentStmt @24 ')'

    AUTO        shift, and go to state 163
    VARIABLE_T  shift, and go to state 99
    ';'         shift, and go to state 164

    DeclarationStmt  go to state 165
    ForDeclare       go to state 166


state 147

  123 ForStmt: FOR @20 ForIn . '{' StmtList '}'

    '{'  shift, and go to state 167


state 148

   37 Expression: Expression . binary_op @8 Expression
  116 Condition: Expression .

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53

    $default  reduce using rule 116 (Condition)

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 149

  121 WhileStmt: WHILE @18 Condition . @19 Block

    $default  reduce using rule 120 (@19)

    @19  go to state 168


state 150

   22 Stmt: RETURN @6 Expression . ';'
   37 Expression: Expression . binary_op @8 Expression

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53
    ';'  shift, and go to state 169

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 151

   79 DeclarationStmt: VARIABLE_T @11 DeclarationList . ';'

    ';'  shift, and go to state 170


state 152

   37 Expression: Expression . binary_op @8 Expression
   94 AssignmentStmt: Operand assign_op Expression .

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53

    $default  reduce using rule 94 (AssignmentStmt)

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 153

  118 Block: '{' @17 . StmtList '}'

    COUT        shift, and go to state 93
    AUTO        shift, and go to state 94
    FOR         shift, and go to state 95
    WHILE       shift, and go to state 96
    RETURN      shift, and go to state 97
    BREAK       shift, and go to state 98
    VARIABLE_T  shift, and go to state 99
    IDENT       shift, and go to state 17
    INT_LIT     shift, and go to state 18
    STR_LIT     shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    ';'         shift, and go to state 100
    '('         shift, and go to state 59

    $default  reduce using rule 114 (@16)

    StmtList         go to state 171
    Stmt             go to state 102
    Operand          go to state 103
    Literal          go to state 27
    DeclarationStmt  go to state 104
    AssignmentStmt   go to state 105
    IfStmt           go to state 106
    IfCondition      go to state 107
    @16              go to state 108
    WhileStmt        go to state 109
    ForStmt          go to state 110
    FuncCallStmt     go to state 111


state 154

  111 IfStmt: IfCondition Block ELSE . @14 Block
  113       | IfCondition Block ELSE . @15 IfStmt

    IF        reduce using rule 112 (@15)
    $default  reduce using rule 110 (@14)

    @14  go to state 172
    @15  go to state 173


state 155

  115 IfCondition: @16 IF '(' . Condition ')'

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 148
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    Condition     go to state 174
    FuncCallStmt  go to state 29


state 156

   33 CoutParmListStmt: SHL Expression . @7 CoutParmListStmt
   34                 | SHL Expression .
   37 Expression: Expression . binary_op @8 Expression

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53

    ';'       reduce using rule 34 (CoutParmListStmt)
    $default  reduce using rule 32 (@7)

    @7         go to state 175
    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 157

   20 Stmt: COUT @5 CoutParmListStmt ';' .

    $default  reduce using rule 20 (Stmt)


state 158

   85 DeclarationIDENT: IDENT VAL_ASSIGN . Expression

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 176
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    FuncCallStmt  go to state 29


state 159

   86 DeclarationIDENT: IDENT D2Array .

    $default  reduce using rule 86 (DeclarationIDENT)


state 160

   88 DeclarationIDENT: IDENT D1Array . @13 VAL_ASSIGN '{' ListOfArray '}'
   89 D2Array: D1Array . D1Array

    '['  shift, and go to state 32

    $default  reduce using rule 87 (@13)

    @13      go to state 177
    D1Array  go to state 70


state 161

   81 DeclarationStmt: AUTO @12 DeclarationList ';' .

    $default  reduce using rule 81 (DeclarationStmt)


state 162

   82 DeclarationList: DeclarationIDENT ',' . DeclarationList

    IDENT  shift, and go to state 143

    DeclarationList   go to state 178
    DeclarationIDENT  go to state 145


state 163

   81 DeclarationStmt: AUTO . @12 DeclarationList ';'
  125 ForIn: '(' AUTO . IDENT ':' IDENT @21 ')'

    IDENT  shift, and go to state 179

    IDENT  [reduce using rule 80 (@12)]

    @12  go to state 114


state 164

  131 ForDeclare: ';' .

    $default  reduce using rule 131 (ForDeclare)


state 165

  130 ForDeclare: DeclarationStmt .

    $default  reduce using rule 130 (ForDeclare)


state 166

  129 ForIn: '(' ForDeclare . @22 Condition @23 ';' AssignmentStmt @24 ')'

    $default  reduce using rule 126 (@22)

    @22  go to state 180


state 167

  123 ForStmt: FOR @20 ForIn '{' . StmtList '}'

    COUT        shift, and go to state 93
    AUTO        shift, and go to state 94
    FOR         shift, and go to state 95
    WHILE       shift, and go to state 96
    RETURN      shift, and go to state 97
    BREAK       shift, and go to state 98
    VARIABLE_T  shift, and go to state 99
    IDENT       shift, and go to state 17
    INT_LIT     shift, and go to state 18
    STR_LIT     shift, and go to state 19
    BOOL_LIT    shift, and go to state 20
    FLOAT_LIT   shift, and go to state 21
    ';'         shift, and go to state 100
    '('         shift, and go to state 59

    $default  reduce using rule 114 (@16)

    StmtList         go to state 181
    Stmt             go to state 102
    Operand          go to state 103
    Literal          go to state 27
    DeclarationStmt  go to state 104
    AssignmentStmt   go to state 105
    IfStmt           go to state 106
    IfCondition      go to state 107
    @16              go to state 108
    WhileStmt        go to state 109
    ForStmt          go to state 110
    FuncCallStmt     go to state 111


state 168

  121 WhileStmt: WHILE @18 Condition @19 . Block

    '{'  shift, and go to state 137

    Block  go to state 182


state 169

   22 Stmt: RETURN @6 Expression ';' .

    $default  reduce using rule 22 (Stmt)


state 170

   79 DeclarationStmt: VARIABLE_T @11 DeclarationList ';' .

    $default  reduce using rule 79 (DeclarationStmt)


state 171

  118 Block: '{' @17 StmtList . '}'

    '}'  shift, and go to state 183


state 172

  111 IfStmt: IfCondition Block ELSE @14 . Block

    '{'  shift, and go to state 137

    Block  go to state 184


state 173

  113 IfStmt: IfCondition Block ELSE @15 . IfStmt

    $default  reduce using rule 114 (@16)

    IfStmt       go to state 185
    IfCondition  go to state 107
    @16          go to state 108


state 174

  115 IfCondition: @16 IF '(' Condition . ')'

    ')'  shift, and go to state 186


state 175

   33 CoutParmListStmt: SHL Expression @7 . CoutParmListStmt

    SHL  shift, and go to state 141

    CoutParmListStmt  go to state 187


state 176

   37 Expression: Expression . binary_op @8 Expression
   85 DeclarationIDENT: IDENT VAL_ASSIGN Expression .

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53

    $default  reduce using rule 85 (DeclarationIDENT)

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 177

   88 DeclarationIDENT: IDENT D1Array @13 . VAL_ASSIGN '{' ListOfArray '}'

    VAL_ASSIGN  shift, and go to state 188


state 178

   82 DeclarationList: DeclarationIDENT ',' DeclarationList .

    $default  reduce using rule 82 (DeclarationList)


state 179

  125 ForIn: '(' AUTO IDENT . ':' IDENT @21 ')'

    ':'  shift, and go to state 189


state 180

  129 ForIn: '(' ForDeclare @22 . Condition @23 ';' AssignmentStmt @24 ')'

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    Expression    go to state 148
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    Condition     go to state 190
    FuncCallStmt  go to state 29


state 181

  123 ForStmt: FOR @20 ForIn '{' StmtList . '}'

    '}'  shift, and go to state 191


state 182

  121 WhileStmt: WHILE @18 Condition @19 Block .

    $default  reduce using rule 121 (WhileStmt)


state 183

  118 Block: '{' @17 StmtList '}' .

    $default  reduce using rule 118 (Block)


state 184

  111 IfStmt: IfCondition Block ELSE @14 Block .

    $default  reduce using rule 111 (IfStmt)


state 185

  113 IfStmt: IfCondition Block ELSE @15 IfStmt .

    $default  reduce using rule 113 (IfStmt)


state 186

  115 IfCondition: @16 IF '(' Condition ')' .

    $default  reduce using rule 115 (IfCondition)


state 187

   33 CoutParmListStmt: SHL Expression @7 CoutParmListStmt .

    $default  reduce using rule 33 (CoutParmListStmt)


state 188

   88 DeclarationIDENT: IDENT D1Array @13 VAL_ASSIGN . '{' ListOfArray '}'

    '{'  shift, and go to state 192


state 189

  125 ForIn: '(' AUTO IDENT ':' . IDENT @21 ')'

    IDENT  shift, and go to state 193


state 190

  129 ForIn: '(' ForDeclare @22 Condition . @23 ';' AssignmentStmt @24 ')'

    $default  reduce using rule 127 (@23)

    @23  go to state 194


state 191

  123 ForStmt: FOR @20 ForIn '{' StmtList '}' .

    $default  reduce using rule 123 (ForStmt)


state 192

   88 DeclarationIDENT: IDENT D1Array @13 VAL_ASSIGN '{' . ListOfArray '}'

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    $default  reduce using rule 93 (ListOfArray)

    Expression    go to state 195
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    ListOfArray   go to state 196
    FuncCallStmt  go to state 29


state 193

  125 ForIn: '(' AUTO IDENT ':' IDENT . @21 ')'

    $default  reduce using rule 124 (@21)

    @21  go to state 197


state 194

  129 ForIn: '(' ForDeclare @22 Condition @23 . ';' AssignmentStmt @24 ')'

    ';'  shift, and go to state 198


state 195

   37 Expression: Expression . binary_op @8 Expression
   91 ListOfArray: Expression .
   92            | Expression . ',' ListOfArray

    SHR  shift, and go to state 37
    BAN  shift, and go to state 38
    BOR  shift, and go to state 39
    BXO  shift, and go to state 40
    ADD  shift, and go to state 41
    SUB  shift, and go to state 42
    MUL  shift, and go to state 43
    DIV  shift, and go to state 44
    REM  shift, and go to state 45
    GTR  shift, and go to state 46
    LES  shift, and go to state 47
    GEQ  shift, and go to state 48
    LEQ  shift, and go to state 49
    EQL  shift, and go to state 50
    NEQ  shift, and go to state 51
    LAN  shift, and go to state 52
    LOR  shift, and go to state 53
    ','  shift, and go to state 199

    $default  reduce using rule 91 (ListOfArray)

    binary_op  go to state 55
    cmp_op     go to state 56
    add_op     go to state 57
    mul_op     go to state 58


state 196

   88 DeclarationIDENT: IDENT D1Array @13 VAL_ASSIGN '{' ListOfArray . '}'

    '}'  shift, and go to state 200


state 197

  125 ForIn: '(' AUTO IDENT ':' IDENT @21 . ')'

    ')'  shift, and go to state 201


state 198

  129 ForIn: '(' ForDeclare @22 Condition @23 ';' . AssignmentStmt @24 ')'

    IDENT      shift, and go to state 202
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 59

    Operand         go to state 103
    Literal         go to state 27
    AssignmentStmt  go to state 203


state 199

   92 ListOfArray: Expression ',' . ListOfArray

    BNT        shift, and go to state 13
    ADD        shift, and go to state 14
    SUB        shift, and go to state 15
    NOT        shift, and go to state 16
    IDENT      shift, and go to state 17
    INT_LIT    shift, and go to state 18
    STR_LIT    shift, and go to state 19
    BOOL_LIT   shift, and go to state 20
    FLOAT_LIT  shift, and go to state 21
    '('        shift, and go to state 22

    $default  reduce using rule 93 (ListOfArray)

    Expression    go to state 195
    UnaryExpr     go to state 24
    PrimaryExpr   go to state 25
    Operand       go to state 26
    Literal       go to state 27
    unary_op      go to state 28
    ListOfArray   go to state 204
    FuncCallStmt  go to state 29


state 200

   88 DeclarationIDENT: IDENT D1Array @13 VAL_ASSIGN '{' ListOfArray '}' .

    $default  reduce using rule 88 (DeclarationIDENT)


state 201

  125 ForIn: '(' AUTO IDENT ':' IDENT @21 ')' .

    $default  reduce using rule 125 (ForIn)


state 202

   45 Operand: IDENT .
   48        | IDENT . D1Array
   49        | IDENT . D2Array

    '['  shift, and go to state 32

    $default  reduce using rule 45 (Operand)

    D2Array  go to state 33
    D1Array  go to state 34


state 203

  129 ForIn: '(' ForDeclare @22 Condition @23 ';' AssignmentStmt . @24 ')'

    $default  reduce using rule 128 (@24)

    @24  go to state 205


state 204

   92 ListOfArray: Expression ',' ListOfArray .

    $default  reduce using rule 92 (ListOfArray)


state 205

  129 ForIn: '(' ForDeclare @22 Condition @23 ';' AssignmentStmt @24 . ')'

    ')'  shift, and go to state 206


state 206

  129 ForIn: '(' ForDeclare @22 Condition @23 ';' AssignmentStmt @24 ')' .

    $default  reduce using rule 129 (ForIn)
